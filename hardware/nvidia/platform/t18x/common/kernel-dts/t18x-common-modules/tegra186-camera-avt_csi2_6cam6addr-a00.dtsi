/*
 * Copyright (c) 2015-2016, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* camera control gpio definitions */
/ {
	host1x {
		vi@15700000 {
			status = "okay";
			num-channels = <6>;
			ports {
				#address-cells = <1>;
				#size-cells = <0>;
				port@0 {
					status ="okay";
					reg = <0>;
					avt_csi2_vi_in0: endpoint {
						status = "okay";
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out0>;
					};
				};
				port@1 {
					status ="okay";
					reg = <1>;
					avt_csi2_vi_in1: endpoint {
						status = "okay";
						port-index = <1>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out1>;
					};
				};
				port@2 {
					status ="okay";
					reg = <2>;
					avt_csi2_vi_in2: endpoint {
						status = "okay";
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out2>;
					};
				};
				port@3 {
					status ="okay";
					reg = <3>;
					avt_csi2_vi_in3: endpoint {
						status = "okay";
						port-index = <3>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out3>;
					};
				};
				port@4 {
					status ="okay";
					reg = <4>;
					avt_csi2_vi_in4: endpoint {
						status = "okay";
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out4>;
					};
				};
				port@5 {
					status ="okay";
					reg = <5>;
					avt_csi2_vi_in5: endpoint {
						status = "okay";
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_out5>;
					};
				};
			};
		};

		nvcsi@150c0000 {
			status = "okay";
			num-channels = <6>;
			#address-cells = <1>;
			#size-cells = <0>;
			channel@0 {
				status = "okay";
				reg = <0>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in0: endpoint@0 {
							status = "okay";
							port-index = <0>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out0>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out0: endpoint@1 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in0>;
						};
					};
				};
			};
			channel@1 {
				status = "okay";
				reg = <1>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in1: endpoint@2 {
							status = "okay";
							port-index = <1>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out1>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out1: endpoint@3 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in1>;
						};
					};
				};
			};
			channel@2 {
				status = "okay";
				reg = <2>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in2: endpoint@4 {
							status = "okay";
							port-index = <2>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out2>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out2: endpoint@5 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in2>;
						};
					};
				};
			};
			channel@3 {
				status = "okay";
				reg = <3>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in3: endpoint@6 {
							status = "okay";
							port-index = <3>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out3>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out3: endpoint@7 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in3>;
						};
					};
				};
			};
			channel@4 {
				status = "okay";
				reg = <4>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in4: endpoint@8 {
							status = "okay";
							port-index = <4>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out4>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out4: endpoint@9 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in4>;
						};
					};
				};
			};
			channel@5 {
				status = "okay";
				reg = <5>;
				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						status = "okay";
						reg = <0>;
						avt_csi2_csi_in5: endpoint@10 {
							status = "okay";
							port-index = <5>;
							bus-width = <2>;
							remote-endpoint = <&avt_csi2_out5>;
						};
					};
					port@1 {
						status = "okay";
						reg = <1>;
						avt_csi2_csi_out5: endpoint@11 {
							status = "okay";
							remote-endpoint = <&avt_csi2_vi_in5>;
						};
					};
				};
			};
		};
	};

	i2c@3180000 {
		status = "okay";
		avt_csi2_a@3c {
			status = "okay";
			devnode = "video0";
			compatible = "alliedvision,avt_csi2";
			reg = <0x3c>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out0: endpoint {
						port-index = <0>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in0>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_a";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};

		avt_csi2_b@38 {
			status = "okay";
			devnode = "video1";
			compatible = "alliedvision,avt_csi2";
			reg = <0x38>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out1: endpoint {
						port-index = <1>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in1>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_b";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};

		avt_csi2_c@3a {
			status = "okay";
			devnode = "video2";
			compatible = "alliedvision,avt_csi2";
			reg = <0x3a>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out2: endpoint {
						port-index = <2>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in2>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_c";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};

		avt_csi2_d@35 {
			status = "okay";
			devnode = "video3";
			compatible = "alliedvision,avt_csi2";
			reg = <0x35>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out3: endpoint {
						port-index = <3>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in3>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_d";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};

		avt_csi2_e@37 {
			status = "okay";
			devnode = "video4";
			compatible = "alliedvision,avt_csi2";
			reg = <0x37>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out4: endpoint {
						port-index = <4>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in4>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_e";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};

		avt_csi2_f@33 {
			status = "okay";
			devnode = "video5";
			compatible = "alliedvision,avt_csi2";
			reg = <0x33>;

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					avt_csi2_out5: endpoint {
						port-index = <5>;
						bus-width = <2>;
						remote-endpoint = <&avt_csi2_csi_in5>;
					};
				};
			};

			mode0 {
				num_lanes = "2";
				tegra_sinterface = "serial_f";
				discontinuous_clk = "no";
				cil_settletime = "0";
				embedded_metadata_height = "0";

				/* not verified: */
				mclk_khz = "24000";
				phy_mode = "DPHY";
				dpcm_enable = "false";

				active_w = "5488";
				active_h = "4112";
				pixel_t = "bayer_bggr";
				readout_orientation = "0";
				line_length = "5488";
				inherent_gain = "1";
				mclk_multiplier = "31.25";
				pix_clk_hz = "750000000";

				gain_factor = "16";
				framerate_factor = "1000000";
				exposure_factor = "1000000";
				min_gain_val = "16"; /* 1.0 */
				max_gain_val = "256"; /* 16.0 */
				step_gain_val = "1"; /* 0.125 */
				min_hdr_ratio = "1";
				max_hdr_ratio = "64";
				min_framerate = "1500000"; /* 1.5 */
				max_framerate = "30000000"; /* 30 */
				step_framerate = "1";
				min_exp_time = "34"; /* us */
				max_exp_time = "550385"; /* us */
				step_exp_time = "1";
			};
		};
	};



	tegra-camera-platform {
		compatible = "nvidia, tegra-camera-platform";

		/**
		* Physical settings to calculate max ISO BW
		*
		* num_csi_lanes = <>;
		* Total number of CSI lanes when all cameras are active
		*
		* max_lane_speed = <>;
		* Max lane speed in Kbit/s
		*
		* min_bits_per_pixel = <>;
		* Min bits per pixel
		*
		* vi_peak_byte_per_pixel = <>;
		* Max byte per pixel for the VI ISO case
		*
		* vi_bw_margin_pct = <>;
		* Vi bandwidth margin in percentage
		*
		* max_pixel_rate = <>;
		* Max pixel rate in Kpixel/s for the ISP ISO case
		*
		* isp_peak_byte_per_pixel = <>;
		* Max byte per pixel for the ISP ISO case
		*
		* isp_bw_margin_pct = <>;
		* Isp bandwidth margin in percentage
		*/
		num_csi_lanes = <12>;
		max_lane_speed = <1500000>;
		min_bits_per_pixel = <10>;
		vi_peak_byte_per_pixel = <2>;
		vi_bw_margin_pct = <25>;
		max_pixel_rate = <160000>;
		isp_peak_byte_per_pixel = <5>;
		isp_bw_margin_pct = <25>;

		/**
		 * The general guideline for naming badge_info contains 3 parts, and is as follows,
		 * The first part is the camera_board_id for the module; if the module is in a FFD
		 * platform, then use the platform name for this part.
		 * The second part contains the position of the module, ex. “rear” or “front”.
		 * The third part contains the last 6 characters of a part number which is found
		 * in the module's specsheet from the vender.
		 */
		modules {
			status = "okay";
			module0 {
				status = "okay";
				badge = "avt_csi2_0";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 0 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_a@3c";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
			module1 {
				status = "okay";
				badge = "avt_csi2_1";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 1 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_b@38";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
			module2 {
				status = "okay";
				badge = "avt_csi2_2";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 2 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_c@3a";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
			module3 {
				status = "okay";
				badge = "avt_csi2_3";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 3 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_d@35";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
			module4 {
				status = "okay";
				badge = "avt_csi2_4";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 4 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_e@37";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
			module5 {
				status = "okay";
				badge = "avt_csi2_5";
				position = "front";
				orientation = "1";
				drivernode0 {
					pcl_id = "v4l2_sensor";
					devname = "avt_csi2 5 2-003c";
					proc-device-tree = "/proc/device-tree/i2c@3180000/avt_csi2_f@33";
				};
				drivernode1 {
					pcl_id = "v4l2_lens";
				};
			};
		};
	};
};
